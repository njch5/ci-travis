title: Continuous integration with Travis CI
description: Learn about the principles of continuous integration with GitHub and Travis CI.
tags: [
  "continuous integration (CI)", "test-driven development (TDD)", "YAML", "protected branches", "commit status"
]
template:
    name: continuous-integration-travis
    repo: ci-travis-template
before:
- type: updateBranchProtection
  enforce_admins: false
  # open issue 1 (welcome)
- type: createIssue
  title: Welcome
  body: 00.0_welcome.md
  data:
    prUrl: '%payload.repository.html_url%/compare/master...initial-travis-config?expand=1'

# Repo artifacts:
# 1. Issue: Welcome
# 2. PR: [title created by learner] - add initial config
# 3. PR: Configure the build
# 4. PR: Add external links to our docs
# 5. Issue: Continuous deployment
# 6. Issue: Congratulations

steps:

# 1 - Enable CI
- title: Enable continuous integration
  description: Enable continuous integration on this repository.
  link: '{{ repoUrl }}/issues/1'
  event: check_run
  actions:
  # waits for ci to report a status, any status
  - type: gate
    left: '%payload.check_run.app.name%'
    operator: ===
    right: Travis CI

  - type: gate
    left: '%payload.check_run.pull_requests.length%'
    operator: '>'
    right: 0

  - type: respond
    issue: '%payload.check_run.pull_requests.0.number%'
    with: 02.1_build-status.md

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.check_run.pull_requests.0.number%'
    commit_id: '%payload.check_run.pull_requests.0.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
      - 2.5.5
      ```
    position: 4

  # close initial issue
  - type: closeIssue
    issue: Welcome

#2 - Use a specific version of a language
- title: Use a specific version of a language
  link: '{{ repoUrl }}/pull/2'
  description: Perform CI tests with a specific version of Ruby.
  event: pull_request.synchronize
  actions:

  - type: createReview
    body: 02.2_new-status.md
    event: APPROVE

# 3 - Merge your fix
- title: Merge the configuration
  link: '{{ repoUrl }}/pull/2'
  description: Share your CI configuration with the team by merging it.
  event: pull_request.closed
  actions:

  # merge master in so we have config
  - type: mergeBranch
    head: master
    base: custom-build

  # create a pull request customizing the config file
  - type: createPullRequest
    title: Configure the build
    body: 03.1_customize-the-build.md
    head: custom-build
    action_id: newPR
    comments:
      # asks learner to add the link checker
      - 03.2_add-validation.md

    # assign the learner so they can commit a suggestion
  - type: assignRegistrant
    issue: '%actions.newPR.data.number%'

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%actions.newPR.data.number%'
    commit_id: '%actions.newPR.data.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
      - bundle exec jekyll build
      ```
    position: 4

  # ask the learner to go to the next PR
  - type: respond
    with: 04.2_go-to-customize-build.md
    data:
      url: 'https://github.com/%payload.repository.owner.login%/%payload.repository.name%/pull/3'

# 4 - Add validation
- title: Add validation
  description: Add automated builds for new commits
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize   # learner added a link checker
  actions:

  # ask the learner for their review
  - type: requestReviewFromRegistrant

  # asks the learner to turn on branch protection, and then approve the PR
  - type: respond
    with: 05.1_protect-branch.md
    data:
      url: '%payload.pull_request.html_url%'
      repo: '%payload.repository.html_url%'

# 5 - Protect a branch based on the CI build status
- title: Protect the master branch
  description: Require that CI returns a successful status before a PR can be merged.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request_review

  actions:

  - type: gate
    left: '%payload.review.state%'
    operator: ===
    right: approved

  # make sure learner turned on branch protection
  - type: octokit
    method: repos.getBranchProtection
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    branch: master

  # merge a broken buuild into the branch
  - type: mergeBranch
    head: timestamp
    base: custom-build
    action_id: mergedBranch

  # tell the learner the branch is protected and to fix the broken link
  - type: respond
    with: 06.1_branch-protected.md
    issue: '%payload.pull_request.number%'

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.pull_request.number%'
    commit_id: '%actions.mergedBranch.data.sha%'
    path: docs/01_getting_ready_for_class.md
    body: |
      ```suggestion
      The time is: {{ site.time }}
      ```
    position: 4

# 6 - Fix the broken build
- title: Fix the broken build
  description: Fix any broken links currently in our codebase.
  link: '{{ repoUrl }}/pull/3'
  event: pull_request.synchronize
  actions:

# explaining waiting for the build, merge when done
  - type: respond
    with: 07.1_fixed.md

# 7 - Merge the PR
- title: Merge code with a successful build
  description: Merge your code.
  event: pull_request.closed
  link: '{{ repoUrl }}/pull/3'
  
  actions:

  # merge master in so we have config
  - type: mergeBranch
    head: master
    base: add-links

  # introduces a new feature into the codebase, asks learner to add a unit test
  - type: createPullRequest #PR 4
    title: Add external links to docs
    body: 08.1_feature.md
    head: add-links
    action_id: linksPR

    # assign the learner so they can commit a suggestion
  - type: assignRegistrant
    issue: '%actions.linksPR.data.number%'

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%actions.linksPR.data.number%'
    commit_id: '%actions.linksPR.data.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
      ```
    position: 2

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%actions.linksPR.data.number%'
    commit_id: '%actions.linksPR.data.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
            script: script/testlinks
      ```
    position: 9

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%actions.linksPR.data.number%'
    commit_id: '%actions.linksPR.data.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
      ```
    position: 1

  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%actions.linksPR.data.number%'
    commit_id: '%actions.linksPR.data.head.sha%'
    path: .travis.yml
    body: |
      ```suggestion
      ```
    position: 3


  - type: respond
    with: 08.2_go-to-feature-pr.md # points learner to feature PR
    data:
      url: 'https://github.com/%payload.repository.owner.login%/%payload.repository.name%/pull/4'

# 8 - Add a unit test
- title: Add an HTMLProofer unit test
  description: Check for broken links using CI.
  link: '{{ repoUrl }}/pull/4'
  event: pull_request.synchronize #PR 5 with the addition of a unit test

  actions:

  # merge a broken link into the branch
  - type: mergeBranch
    head: add-a-link
    base: add-links
    action_id: branchWithLink

  # tells the learner to fix the broken link
  - type: respond
    with: 09.1_fix-the-link.md

  # suggest change from the learner
  - type: octokit
    method: pullRequests.createComment
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    number: '%payload.pull_request.number%'
    commit_id: '%actions.branchWithLink.data.sha%'
    path: index.md
    body: |
      ```suggestion
      Welcome to our Documentation site. How about a visit to [GitHub Docs](https://help.github.com/articles/set-up-git/)
      ```
    position: 5

# 9 - Fix the borken link
- title: Fix the broken link
  description: Fix the broken link.
  link: '{{ repoUrl }}/pull/4'
  event: pull_request.synchronize

  actions:

  - type: requestReviewFromRegistrant
  
  - type: respond
    with: 10.1_merge.md

# 10 - Merge your unit test
- title: Merge the unit test
  description: Merge the test.
  link: '{{ repoUrl }}/pull/4'
  event: pull_request.closed

  actions:

  # teaches the learner about continuous deployment with the introduction of the stage in the config
  - type: createIssue # PR 5: CD
    title: Continuous deployment
    body: 11.1_deploy.md

  # asks the learner to merge the deployment
  - type: respond
    issue: Add external links to docs
    with: 11.2_goto-deployment.md
    data:
      url: 'https://github.com/%payload.repository.owner.login%/%payload.repository.name%/issues/5'

# 11 - Deploy
- title: Deploy
  description: Add continuous deployment to your pipeline.
  link: '{{ repoUrl }}/issues/5'
  event: deployment

  actions:

  # points the learner to the deployment, constrasts with continuous delivery
  - type: respond
    issue: Continuous deployment
    with: 12.1_see-deployed.md
    data:
      url: 'https://github.com/%payload.repository.owner.login%/%payload.repository.name%/issues/6'

  - type: closeIssue
    issue: Continuous deployment

  # final issue
  - type: createIssue
    title: Congratulations
    body: 12.2_congratulations.md
